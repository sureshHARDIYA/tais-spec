get:
  tags:
    - CI/CD
  summary: Get user activities by username
  description: |
    Retrieve all activities for a specific user by their username. This endpoint provides
    comprehensive information about user actions, commits, pipeline runs, and other
    activities within the CI/CD system.
  operationId: getUserActivitiesByUsername
  parameters:
    - name: username
      in: path
      required: true
      description: The username of the user whose activities to retrieve
      schema:
        type: string
        example: "john_doe"
    - name: limit
      in: query
      required: false
      description: Maximum number of activities to return (default: 50, max: 100)
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 50
        example: 25
    - name: offset
      in: query
      required: false
      description: Number of activities to skip for pagination
      schema:
        type: integer
        minimum: 0
        default: 0
        example: 0
    - name: activity_type
      in: query
      required: false
      description: Filter activities by type
      schema:
        type: string
        enum: [commit, pipeline, deployment, merge_request, issue, all]
        default: all
        example: "pipeline"
    - name: date_from
      in: query
      required: false
      description: Filter activities from this date (ISO 8601 format)
      schema:
        type: string
        format: date-time
        example: "2024-01-01T00:00:00Z"
    - name: date_to
      in: query
      required: false
      description: Filter activities until this date (ISO 8601 format)
      schema:
        type: string
        format: date-time
        example: "2024-12-31T23:59:59Z"
  responses:
    '200':
      description: User activities retrieved successfully
      headers:
        X-Total-Count:
          description: Total number of activities available
          schema:
            type: integer
            example: 150
        X-Page-Count:
          description: Total number of pages available
          schema:
            type: integer
            example: 6
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: "../components/schemas/User.yaml"
              activities:
                type: array
                items:
                  $ref: "../components/schemas/UserActivity.yaml"
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    example: 25
                  offset:
                    type: integer
                    example: 0
                  total:
                    type: integer
                    example: 150
                  has_more:
                    type: boolean
                    example: true
          examples:
            success:
              summary: User activities with pipeline and commit data
              value:
                user:
                  id: 123
                  username: "john_doe"
                  name: "John Doe"
                  email: "john.doe@example.com"
                  avatar_url: "https://example.com/avatars/john_doe.jpg"
                  web_url: "https://gitlab.example.com/john_doe"
                  created_at: "2023-01-15T10:30:00Z"
                  last_activity_at: "2024-01-20T14:45:30Z"
                activities:
                  - id: "act_001"
                    type: "pipeline"
                    action: "pipeline_success"
                    description: "Pipeline #1234 succeeded for project 'web-app'"
                    timestamp: "2024-01-20T14:45:30Z"
                    project:
                      id: 456
                      name: "web-app"
                      path: "company/web-app"
                      web_url: "https://gitlab.example.com/company/web-app"
                    pipeline:
                      id: 1234
                      status: "success"
                      duration: 420
                      web_url: "https://gitlab.example.com/company/web-app/-/pipelines/1234"
                  - id: "act_002"
                    type: "commit"
                    action: "push"
                    description: "Pushed 3 commits to branch 'feature/user-auth'"
                    timestamp: "2024-01-20T13:20:15Z"
                    project:
                      id: 456
                      name: "web-app"
                      path: "company/web-app"
                      web_url: "https://gitlab.example.com/company/web-app"
                    commit:
                      id: "abc123def456"
                      message: "Add user authentication middleware"
                      short_id: "abc123d"
                      web_url: "https://gitlab.example.com/company/web-app/-/commit/abc123def456"
                pagination:
                  limit: 25
                  offset: 0
                  total: 150
                  has_more: true
    '404':
      description: User not found
      content:
        application/json:
          schema:
            $ref: "../components/schemas/Problem.yaml"
          examples:
            user_not_found:
              summary: User not found
              value:
                type: "https://api.example.com/problems/user-not-found"
                title: "User Not Found"
                status: 404
                detail: "User with username 'john_doe' was not found"
                instance: "/cicd/users/john_doe/activities"
    '400':
      description: Bad request - invalid parameters
      content:
        application/json:
          schema:
            $ref: "../components/schemas/Problem.yaml"
          examples:
            invalid_parameters:
              summary: Invalid query parameters
              value:
                type: "https://api.example.com/problems/invalid-parameters"
                title: "Invalid Parameters"
                status: 400
                detail: "Invalid date format or limit exceeds maximum allowed value"
                instance: "/cicd/users/john_doe/activities"
    '403':
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: "../components/schemas/Problem.yaml"
          examples:
            forbidden:
              summary: Insufficient permissions
              value:
                type: "https://api.example.com/problems/forbidden"
                title: "Forbidden"
                status: 403
                detail: "You don't have permission to view activities for this user"
                instance: "/cicd/users/john_doe/activities"
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "../components/schemas/Problem.yaml"
